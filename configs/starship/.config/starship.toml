##format = """
##[╭─user───❯](bold blue) $username
##[┣─system─❯](bold yellow) $hostname
##[┣─project❯](bold red) $directory$rust$git_branch$git_status$package$golang$terraform$docker_context$python$docker_context$nodejs
##[╰─cmd────❯](bold green) 
##"""
#[username]
#style_user = "green bold"
#style_root = "red bold"
#format = "[$user]($style) "
#disabled = false
#show_always = true
#
#[hostname]
#ssh_only = false
#format = 'on [MacBook-Pro-14](bold yellow) '
#trim_at = "."
#disabled = false
#
## Replace the "❯" symbol in the prompt with "➜"
#[character]                            # The name of the module we are configuring is "character"
#success_symbol = "[﬌](bold green)"     # The "success_symbol" segment is being set to "➜" with the color "bold green"
#error_symbol = "[✗](bold red)"
##  
## configure directory
#[directory]
#read_only = " "
#truncation_length = 10
#truncate_to_repo = true # truncates directory to root folder if in github repo
#style = "bold italic blue"
#
#[cmd_duration]
#min_time = 4
#show_milliseconds = false
#disabled = false
#style = "bold italic red"
#
#[aws]
#symbol = "  "
#
#[conda]
#symbol = " "
#
#[dart]
#symbol = " "
#
##[directory]
##read_only = " "
#
#[docker_context]
#symbol = " "
#format = "via [$symbol$context]($style) "
#style = "blue bold"
#only_with_files = true
#detect_files = ["docker-compose.yml", "docker-compose.yaml", "Dockerfile"]
#detect_folders = []
#disabled = false
#
#[elixir]
#symbol = " "
#
#[elm]
#symbol = " "
#
#[git_branch]
#symbol = " "
#
#[golang]
#symbol = " "
#
#[hg_branch]
#symbol = " "
#
#[java]
#symbol = " "
#
#[julia]
#symbol = " "
#
#[memory_usage]
#symbol = " "
#
#[nim]
#symbol = " "
#
#[nix_shell]
#symbol = " "
#
#[package]
#symbol = " "
#
#[perl]
#symbol = " "
#
#[php]
#symbol = " "
#
#[python]
#symbol = " "
##pyenv_version_name = true
#format = 'via [${symbol}python (${version} )(\($virtualenv\) )]($style)'
#style = "bold yellow"
#pyenv_prefix = "venv "
#python_binary = ["./venv/bin/python", "python", "python3", "python2"]
#detect_extensions = ["py"]
#version_format = "v${raw}"
#
#[ruby]
#symbol = " "
#
#[rust]
#symbol = " "
#
#[scala]
#symbol = " "
#
#[shlvl]
#symbol = " "
#
#[swift]
#symbol = "ﯣ "
#
#[nodejs]
#format = "via [ Node.js $version](bold green) "
#detect_files = ["package.json", ".node-version"]
#detect_folders = ["node_modules"]

#--------------------------------------------------------------------------

# [character]
# error_symbol = "[✖](bold red) "

# [cmd_duration]
# min_time = 10_000  # Show command duration over 10,000 milliseconds (=10 sec)
# format = " took [$duration]($style)"

# [directory]
# truncation_length = 5
# format = "[$path]($style)[$lock_symbol]($lock_style) "

# [git_branch]
# format = " [$symbol$branch]($style) "
# symbol = "🍣 "
# style = "bold yellow"

# [git_commit]
# commit_hash_length = 8
# style = "bold white"

# [git_state]
# format = '[\($state( $progress_current of $progress_total)\)]($style) '

# [git_status]
# conflicted = "⚔️ "
# ahead = "🏎️ 💨 ×${count}"
# behind = "🐢 ×${count}"
# diverged = "🔱 🏎️ 💨 ×${ahead_count} 🐢 ×${behind_count}"
# untracked = "🛤️  ×${count}"
# stashed = "📦 "
# modified = "📝 ×${count}"
# staged = "🗃️  ×${count}"
# renamed = "📛 ×${count}"
# deleted = "🗑️  ×${count}"
# style = "bright-white"
# format = "$all_status$ahead_behind"

# [hostname]
# ssh_only = false
# format = "<[$hostname]($style)>"
# trim_at = "-"
# style = "bold dimmed white"
# disabled = true

# [julia]
# format = "[$symbol$version]($style) "
# symbol = "ஃ "
# style = "bold green"

# [memory_usage]
# format = "$symbol[${ram}( | ${swap})]($style) "
# threshold = 70
# style = "bold dimmed white"
# disabled = false

# [package]
# disabled = true

# [python]
# format = "[$symbol$version]($style) "
# style = "bold green"

# [rust]
# format = "[$symbol$version]($style) "
# style = "bold green"


# [username]
# style_user = "bold dimmed blue"
# show_always = false

#--------------------------------------------------------------------------

# add_newline = false

# # Replace the "❯" symbol in the prompt with "➜"
# [character]      # The name of the module we are configuring is "character"
# symbol = "➜"     # The "symbol" segment is being set to "➜"
# error_symbol = "✗"
# use_symbol_for_status = true

# # Disable the package module, hiding it from the prompt completely
# [package]
# disabled = true

# [battery]
# full_symbol = "🔋"
# charging_symbol = "⚡️"
# discharging_symbol = "💀"

# [[battery.display]]  # "bold red" style when capacity is between 0% and 10%
# threshold = 10
# style = "bold red"

# [[battery.display]]  # "bold yellow" style when capacity is between 10% and 30%
# threshold = 30
# style = "bold yellow"

# [directory]
# truncation_length = 4

# # docker
# [docker_context]
# symbol = "🐋 "
# disabled = false

# # env variable
# [env_var]
# variable = "SHELL"
# default = "unknown shell"

# # git

# [git_commit]
# commit_hash_length = 4

# [git_status]
# conflicted = "🏳"
# ahead = "🏎💨"
# behind = "😰"
# diverged = "😵"
# untracked = "🤷‍"
# stashed = "📦"
# modified = "📝"
# staged.value = "++"
# staged.style = "green"
# staged_count.enabled = true
# staged_count.style = "green"
# renamed = "👅"
# deleted = "🗑"

# # hostname
# [hostname]
# ssh_only = false
# prefix = "⟪"
# suffix = "⟫"
# trim_at = ".companyname.com"
# disabled = true

# # kubernetes
# [kubernetes]
# symbol = "⛵ "
# style = "dimmed green"
# disabled = false
# [kubernetes.context_aliases]
# "dev.local.cluster.k8s" = "dev"

# [memory_usage]
# disabled = false
# show_percentage = true
# show_swap = true
# threshold = -1
# symbol = " "
# separator = "/"
# style = "bold dimmed green"

#--------------------------------------------------------------------------

# format = """
# $sudo\
# $username\
# $localip\
# [](bg:#16334F fg:#102030)\
# $directory\
# [](fg:#16334F bg:#19546a)\
# $git_branch\
# [](fg:#19546a bg:#1b6d83)\
# $python\
# [](fg:#1b6d83 bg:#1F7F8F)\
# $time\
# $character
# """

# add_newline = true

# [character]
# success_symbol = "[](fg:#1F7F8F)"
# error_symbol = "[](fg:#1F7F8F bg:#FF3366)[](fg:#FF3366)"

# [sudo]
# disabled = false
# format = "[ $symbol ](#FF3366 bg:#000000)[](bg:#102030 fg:#000000)"
# symbol = "sudo"

# [username]
# show_always = false
# style_user = "bold #009999 bg:#102030"
# style_root = "bold #FF3366 bg:#102030"
# format = '[ $user ]($style)'

# [localip]
# ssh_only = true
# format = "[@](#999999 bg:#102030)[ $localipv4 ](#009999  bg:#102030)"
# disabled = false

# [directory]
# style = "#AAAAAA bg:#16334F"
# format = "[ $path ]($style)"
# truncation_length = 0

# # [directory.substitutions]
# # "develop" = ""

# [git_branch]
# symbol = ""
# format = '[[ $symbol $branch ](#CCCCCC bg:#19546a)]($style)'

# [nodejs]
# symbol = ""
# format = '[[ $symbol ($version) ](#DDDDDD bg:#1b6d83)]($style)'

# [python]
# format = '[[ $symbol($version) ](#DDDDDD bg:#1b6d83)]($style)'


# [cmd_duration]
# disabled = false
# min_time = 5_000
# format = '[ $duration ]($style)'

#--------------------------------------------------------------------------

# Which is equivalent to
format = """
$username\
$hostname\
$shlvl\
$kubernetes\
$directory\
$git_branch\
$git_commit\
$git_state\
$git_status\
$hg_branch\
$helm\
$terraform\
$memory_usage\
$env_var\
$cmd_duration\
$custom\
$line_break\
$jobs\
$battery\
$time\
$status\
$character"""

[character]      # The name of the module we are configuring is "character"
success_symbol = "[➜](bold green)"     # The "symbol" segment is being set to "➜"
error_symbol = "[✗](bold red)"

[jobs]
threshold = 1
format = "[$number ]($style)"

[directory]
truncate_to_repo = false

[battery]
full_symbol = "🔋"
charging_symbol = "⚡️"
discharging_symbol = "💀"

[git_status]
format = "([$conflicted$stashed$deleted$renamed$modified$staged$untracked$ahead_behind ]($style))"
ahead = " ⇡ ${count}"
diverged = " ⇕⇡ ${ahead_count} ⇣${behind_count}"
behind = " ⇣ ${count}"
modified = " [ ${count}](blue)"
staged = " [🔒${count}](green)"
renamed = " [凜 ${count}](green)"
deleted = " [ ${count}](red)"
untracked = " [ ${count}](red)"


[cmd_duration]
disabled = false
min_time = 5_000    # 5 seconds
format = '[ $duration ]($style)'